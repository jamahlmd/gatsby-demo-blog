{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["query","IndexPage","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","post","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","path","title","date","excerpt","tags","tag","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-9c453bb0f09b1f3d41c0.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout';\n\n\n\nconst IndexPage = ({data}) => {\n    const { edges: posts } = data.allMarkdownRemark;\n    return (\n        <Layout>\n            {posts.map(({node: post}) => {\n\n                const { frontmatter } = post;\n\n                return (\n                    <div key={post.id}>\n                        <h2>\n                            <Link to={frontmatter.path}>\n                                {frontmatter.title}\n                            </Link>\n                        </h2>\n                        <p>{frontmatter.date}</p>\n                        <p>{frontmatter.excerpt}</p>\n                        <ul>\n                            {\n                                post.frontmatter.tags.map( tag => {\n                                    return (\n                                        <li key={tag}>\n                                            <Link to={`/tags/${tag}`}>\n                                                {tag}\n                                            </Link>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                )\n            })}\n        </Layout>\n    )\n}\n\n\nexport const query = graphql`\nquery IndexQuery {\n    allMarkdownRemark {\n        totalCount\n        edges {\n            node {\n                id\n                frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                    path\n                    tags\n                    excerpt\n                }\n\n            }\n        }\n    }\n}`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}